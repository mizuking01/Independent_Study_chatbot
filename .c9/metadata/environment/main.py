{"changed":true,"filter":false,"title":"main.py","tooltip":"/main.py","value":"import os\nimport gspread\nimport streamlit as st\nfrom dotenv import load_dotenv\nfrom datetime import datetime  \nfrom oauth2client.service_account import ServiceAccountCredentials\nfrom file_loader import load_pdf\nfrom file_loader import load_text\nfrom file_loader import load_docx\nfrom text_splitter import split_text\nfrom faiss_indexer import load_and_index_folder, search_index, create_faiss_index\n\n# 環境変数のロード（必要に応じて）\nload_dotenv()\n\n# Streamlitのヘッダー\nst.title(\"質問応答チャットボット\")\n\n# フォルダのパス\nlecture_folder = \"./Programming_engineering\"  # 講義資料フォルダ\nexample_folder = \"./examples\"     # 回答例フォルダ\nlog_folder = \"./logs\"             # 会話ログ保存フォルダ\n\n# フォルダの存在確認\nfolders_to_load = [lecture_folder]\nif os.path.exists(example_folder):\n    folders_to_load.append(example_folder)\n\n# インデックスの作成\ndef load_and_index_multiple_folders(folders):\n    all_texts = []\n    for folder in folders:\n        texts = load_and_index_folder(folder, return_documents=True)\n        all_texts.extend(texts)\n    return create_faiss_index(all_texts)\n    \n# フォルダをまとめて読み込み＆インデックス化\ncombined_index = load_and_index_multiple_folders(folders_to_load)\n\n# セッションステートでメッセージの履歴を保持\nif \"messages\" not in st.session_state:\n    st.session_state.messages = []\n\n# 既存のメッセージをブラウザ上に表示\nfor message in st.session_state.messages:\n    with st.chat_message(message[\"role\"]):\n        st.markdown(message[\"content\"])\n\n# ユーザー入力\nquery = st.chat_input(\"質問を入力してください:\")\n\n# 質問が入力された場合の応答処理\nif query:\n    st.session_state.messages.append({\"role\": \"user\", \"content\": query})\n    with st.chat_message(\"user\"):\n        st.markdown(query)\n\n    response = search_index(combined_index, query)\n\n    with st.chat_message(\"assistant\"):\n        st.markdown(response)\n\n    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})\n\n    # ここでログを即時保存\n    save_single_turn_to_sheet(query, response)\n\n# Google Sheets に接続\ndef get_gsheet():\n    import json\n    scope = [\"https://spreadsheets.google.com/feeds\", \"https://www.googleapis.com/auth/drive\"]\n    creds_dict = json.loads(st.secrets[\"GSPREAD_SERVICE_ACCOUNT\"])\n    creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)\n    client = gspread.authorize(creds)\n    sheet = client.open(st.secrets[\"SHEET_NAME\"]).sheet1\n    return sheet\n    \n# 会話履歴を1行だけGoogle Sheetsに保存（student_idは常にanonymous）\ndef save_single_turn_to_sheet(user_query, assistant_response):\n    sheet = get_gsheet()\n    timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    sheet.append_row([timestamp, user_query, assistant_response])\n","undoManager":{"mark":57,"position":63,"stack":[[{"start":{"row":14,"column":35},"end":{"row":14,"column":36},"action":"remove","lines":["F"],"id":192},{"start":{"row":14,"column":34},"end":{"row":14,"column":35},"action":"remove","lines":["D"]},{"start":{"row":14,"column":33},"end":{"row":14,"column":34},"action":"remove","lines":["P"]}],[{"start":{"row":0,"column":0},"end":{"row":45,"column":0},"action":"remove","lines":["import os","import streamlit as st","from dotenv import load_dotenv","from pdf_loader import load_pdf","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# 読み込みたいPDFファイルが入っているフォルダのパス","folder_path = \"./kougisiryou\"  # ファイルが保存されているフォルダのパス","","# FAISSインデックスの作成","faiss_index = load_and_index_folder(folder_path)","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    # ユーザーメッセージをセッションに追加し表示","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    # FAISSインデックスを使って回答を生成し表示","    response = search_index(faiss_index, query)","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    # 応答メッセージをセッションに保存","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})",""],"id":193},{"start":{"row":0,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["import os","import streamlit as st","from dotenv import load_dotenv","from pdf_loader import load_pdf","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# 読み込みたいPDFファイルが入っているフォルダのパス","folder_path = \"./kougisiryou\"  # ファイルが保存されているフォルダのパス","","# FAISSインデックスの作成","faiss_index = load_and_index_folder(folder_path)","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    # ユーザーメッセージをセッションに追加し表示","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    # FAISSインデックスを使って回答を生成し表示","    response = search_index(faiss_index, query)","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    # 応答メッセージをセッションに保存","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","# 履歴を出力する処理","def save_conversation_log():","    log_file_path = \"conversation_log.txt\"","    with open(log_file_path, \"w\", encoding=\"utf-8\") as log_file:","        for message in st.session_state.messages:","            role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","            log_file.write(f\"{role}: {message['content']}\\n\")","    st.success(f\"会話履歴が {log_file_path} に保存されました！\")","","# Streamlitのボタンで履歴保存をトリガー","if st.button(\"会話履歴を保存\"):","    save_conversation_log()",""]}],[{"start":{"row":14,"column":17},"end":{"row":14,"column":28},"action":"remove","lines":["kougisiryou"],"id":194}],[{"start":{"row":14,"column":17},"end":{"row":14,"column":18},"action":"insert","lines":["s"],"id":195},{"start":{"row":14,"column":18},"end":{"row":14,"column":19},"action":"insert","lines":["o"]},{"start":{"row":14,"column":19},"end":{"row":14,"column":20},"action":"insert","lines":["f"]},{"start":{"row":14,"column":20},"end":{"row":14,"column":21},"action":"insert","lines":["t"]},{"start":{"row":14,"column":21},"end":{"row":14,"column":22},"action":"insert","lines":["w"]},{"start":{"row":14,"column":22},"end":{"row":14,"column":23},"action":"insert","lines":["a"]},{"start":{"row":14,"column":23},"end":{"row":14,"column":24},"action":"insert","lines":["r"]},{"start":{"row":14,"column":24},"end":{"row":14,"column":25},"action":"insert","lines":["e"]}],[{"start":{"row":0,"column":0},"end":{"row":58,"column":0},"action":"remove","lines":["import os","import streamlit as st","from dotenv import load_dotenv","from pdf_loader import load_pdf","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# 読み込みたいPDFファイルが入っているフォルダのパス","folder_path = \"./software\"  # ファイルが保存されているフォルダのパス","","# FAISSインデックスの作成","faiss_index = load_and_index_folder(folder_path)","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    # ユーザーメッセージをセッションに追加し表示","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    # FAISSインデックスを使って回答を生成し表示","    response = search_index(faiss_index, query)","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    # 応答メッセージをセッションに保存","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","# 履歴を出力する処理","def save_conversation_log():","    log_file_path = \"conversation_log.txt\"","    with open(log_file_path, \"w\", encoding=\"utf-8\") as log_file:","        for message in st.session_state.messages:","            role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","            log_file.write(f\"{role}: {message['content']}\\n\")","    st.success(f\"会話履歴が {log_file_path} に保存されました！\")","","# Streamlitのボタンで履歴保存をトリガー","if st.button(\"会話履歴を保存\"):","    save_conversation_log()",""],"id":196},{"start":{"row":0,"column":0},"end":{"row":59,"column":0},"action":"insert","lines":["import os","import streamlit as st","from dotenv import load_dotenv","from pdf_loader import load_pdf","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# 読み込みたいPDFファイルが入っているフォルダのパス","folder_path = \"./kougisiryou\"  # ファイルが保存されているフォルダのパス","","# FAISSインデックスの作成","faiss_index = load_and_index_folder(folder_path)","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    # ユーザーメッセージをセッションに追加し表示","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    # FAISSインデックスを使って回答を生成し表示","    response = search_index(faiss_index, query)","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    # 応答メッセージをセッションに保存","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","# 履歴を出力する処理","def save_conversation_log():","    log_file_path = \"conversation_log.txt\"","    with open(log_file_path, \"w\", encoding=\"utf-8\") as log_file:","        for message in st.session_state.messages:","            role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","            log_file.write(f\"{role}: {message['content']}\\n\")","    st.success(f\"会話履歴が {log_file_path} に保存されました！\")","","# 会話終了ボタン","if st.button(\"会話を終了\"):","    save_conversation_log()","    st.info(\"会話が終了しました。新しい会話を開始するにはアプリを再起動してください。\")",""]}],[{"start":{"row":58,"column":23},"end":{"row":58,"column":48},"action":"remove","lines":["新しい会話を開始するにはアプリを再起動してください"],"id":197}],[{"start":{"row":58,"column":23},"end":{"row":58,"column":24},"action":"remove","lines":["。"],"id":198}],[{"start":{"row":0,"column":0},"end":{"row":59,"column":0},"action":"remove","lines":["import os","import streamlit as st","from dotenv import load_dotenv","from pdf_loader import load_pdf","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# 読み込みたいPDFファイルが入っているフォルダのパス","folder_path = \"./kougisiryou\"  # ファイルが保存されているフォルダのパス","","# FAISSインデックスの作成","faiss_index = load_and_index_folder(folder_path)","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    # ユーザーメッセージをセッションに追加し表示","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    # FAISSインデックスを使って回答を生成し表示","    response = search_index(faiss_index, query)","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    # 応答メッセージをセッションに保存","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","# 履歴を出力する処理","def save_conversation_log():","    log_file_path = \"conversation_log.txt\"","    with open(log_file_path, \"w\", encoding=\"utf-8\") as log_file:","        for message in st.session_state.messages:","            role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","            log_file.write(f\"{role}: {message['content']}\\n\")","    st.success(f\"会話履歴が {log_file_path} に保存されました！\")","","# 会話終了ボタン","if st.button(\"会話を終了\"):","    save_conversation_log()","    st.info(\"会話が終了しました。\")",""],"id":199},{"start":{"row":0,"column":0},"end":{"row":70,"column":0},"action":"insert","lines":["import os","import streamlit as st","from dotenv import load_dotenv","from pdf_loader import load_pdf","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# 読み込みたいPDFファイルが入っているフォルダのパス","folder_path = \"./kougisiryou\"  # ファイルが保存されているフォルダのパス","","# FAISSインデックスの作成","faiss_index = load_and_index_folder(folder_path)","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","if \"app_running\" not in st.session_state:","    st.session_state.app_running = True","","# 会話終了ボタンが押された場合","def save_and_exit():","    save_conversation_log()  # 履歴を保存","    st.session_state.app_running = False  # アプリを終了フラグに設定","","# 履歴を出力する処理","def save_conversation_log():","    log_file_path = \"conversation_log.txt\"","    with open(log_file_path, \"w\", encoding=\"utf-8\") as log_file:","        for message in st.session_state.messages:","            role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","            log_file.write(f\"{role}: {message['content']}\\n\")","    st.success(f\"会話履歴が {log_file_path} に保存されました！\")","","# アプリ終了ロジック","if not st.session_state.app_running:","    st.info(\"会話が終了しました。アプリを閉じるか、再起動してください。\")","else:","    # 既存のメッセージをブラウザ上に表示","    for message in st.session_state.messages:","        with st.chat_message(message[\"role\"]):","            st.markdown(message[\"content\"])","","    # ユーザー入力","    query = st.chat_input(\"質問を入力してください:\")","","    # 質問が入力された場合の応答処理","    if query:","        # ユーザーメッセージをセッションに追加し表示","        st.session_state.messages.append({\"role\": \"user\", \"content\": query})","        with st.chat_message(\"user\"):","            st.markdown(query)","","        # FAISSインデックスを使って回答を生成し表示","        response = search_index(faiss_index, query)","        with st.chat_message(\"assistant\"):","            st.markdown(response)","","        # 応答メッセージをセッションに保存","        st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","    # 会話終了ボタン","    if st.button(\"会話を終了\"):","        save_and_exit()",""]}],[{"start":{"row":0,"column":0},"end":{"row":70,"column":0},"action":"remove","lines":["import os","import streamlit as st","from dotenv import load_dotenv","from pdf_loader import load_pdf","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# 読み込みたいPDFファイルが入っているフォルダのパス","folder_path = \"./kougisiryou\"  # ファイルが保存されているフォルダのパス","","# FAISSインデックスの作成","faiss_index = load_and_index_folder(folder_path)","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","if \"app_running\" not in st.session_state:","    st.session_state.app_running = True","","# 会話終了ボタンが押された場合","def save_and_exit():","    save_conversation_log()  # 履歴を保存","    st.session_state.app_running = False  # アプリを終了フラグに設定","","# 履歴を出力する処理","def save_conversation_log():","    log_file_path = \"conversation_log.txt\"","    with open(log_file_path, \"w\", encoding=\"utf-8\") as log_file:","        for message in st.session_state.messages:","            role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","            log_file.write(f\"{role}: {message['content']}\\n\")","    st.success(f\"会話履歴が {log_file_path} に保存されました！\")","","# アプリ終了ロジック","if not st.session_state.app_running:","    st.info(\"会話が終了しました。アプリを閉じるか、再起動してください。\")","else:","    # 既存のメッセージをブラウザ上に表示","    for message in st.session_state.messages:","        with st.chat_message(message[\"role\"]):","            st.markdown(message[\"content\"])","","    # ユーザー入力","    query = st.chat_input(\"質問を入力してください:\")","","    # 質問が入力された場合の応答処理","    if query:","        # ユーザーメッセージをセッションに追加し表示","        st.session_state.messages.append({\"role\": \"user\", \"content\": query})","        with st.chat_message(\"user\"):","            st.markdown(query)","","        # FAISSインデックスを使って回答を生成し表示","        response = search_index(faiss_index, query)","        with st.chat_message(\"assistant\"):","            st.markdown(response)","","        # 応答メッセージをセッションに保存","        st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","    # 会話終了ボタン","    if st.button(\"会話を終了\"):","        save_and_exit()",""],"id":200},{"start":{"row":0,"column":0},"end":{"row":59,"column":0},"action":"insert","lines":["import os","import streamlit as st","from dotenv import load_dotenv","from pdf_loader import load_pdf","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# 読み込みたいPDFファイルが入っているフォルダのパス","folder_path = \"./kougisiryou\"  # ファイルが保存されているフォルダのパス","","# FAISSインデックスの作成","faiss_index = load_and_index_folder(folder_path)","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    # ユーザーメッセージをセッションに追加し表示","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    # FAISSインデックスを使って回答を生成し表示","    response = search_index(faiss_index, query)","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    # 応答メッセージをセッションに保存","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","# 履歴を出力する処理","def save_conversation_log():","    log_file_path = \"conversation_log.txt\"","    with open(log_file_path, \"w\", encoding=\"utf-8\") as log_file:","        for message in st.session_state.messages:","            role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","            log_file.write(f\"{role}: {message['content']}\\n\")","    st.success(f\"会話履歴が {log_file_path} に保存されました！\")","","# 会話終了ボタン","if st.button(\"会話を終了\"):","    save_conversation_log()","    st.info(\"会話が終了しました。新しい会話を開始するにはアプリを再起動してください。\")",""]}],[{"start":{"row":58,"column":23},"end":{"row":58,"column":48},"action":"remove","lines":["新しい会話を開始するにはアプリを再起動してください"],"id":201}],[{"start":{"row":58,"column":23},"end":{"row":58,"column":24},"action":"remove","lines":["。"],"id":202}],[{"start":{"row":53,"column":4},"end":{"row":53,"column":50},"action":"remove","lines":["st.success(f\"会話履歴が {log_file_path} に保存されました！\")"],"id":203}],[{"start":{"row":52,"column":20},"end":{"row":114,"column":0},"action":"insert","lines":["import os","import streamlit as st","from dotenv import load_dotenv","from datetime import datetime  # 日付・時刻の取得に使用","from pdf_loader import load_pdf","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# 読み込みたいPDFファイルが入っているフォルダのパス","folder_path = \"./kougisiryou\"  # ファイルが保存されているフォルダのパス","","# FAISSインデックスの作成","faiss_index = load_and_index_folder(folder_path)","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    # ユーザーメッセージをセッションに追加し表示","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    # FAISSインデックスを使って回答を生成し表示","    response = search_index(faiss_index, query)","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    # 応答メッセージをセッションに保存","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","# 履歴を出力する処理","def save_conversation_log():","    # 動的なファイル名を生成（例: conversation_log_20241203_141530.txt）","    timestamp = datetime.now().strftime(\"%Y%m%d_%H%M%S\")","    log_file_path = f\"conversation_log_{timestamp}.txt\"","    with open(log_file_path, \"w\", encoding=\"utf-8\") as log_file:","        for message in st.session_state.messages:","            role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","            log_file.write(f\"{role}: {message['content']}\\n\")","    st.success(f\"会話履歴が {log_file_path} に保存されました！\")","","# 会話終了ボタン","if st.button(\"会話を終了\"):","    save_conversation_log()","    st.info(\"会話が終了しました。アプリを閉じるか再起動してください。\")",""],"id":204}],[{"start":{"row":0,"column":0},"end":{"row":121,"column":0},"action":"remove","lines":["import os","import streamlit as st","from dotenv import load_dotenv","from pdf_loader import load_pdf","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# 読み込みたいPDFファイルが入っているフォルダのパス","folder_path = \"./kougisiryou\"  # ファイルが保存されているフォルダのパス","","# FAISSインデックスの作成","faiss_index = load_and_index_folder(folder_path)","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    # ユーザーメッセージをセッションに追加し表示","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    # FAISSインデックスを使って回答を生成し表示","    response = search_index(faiss_index, query)","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    # 応答メッセージをセッションに保存","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","# 履歴を出力する処理","def save_conversation_log():","    log_file_path = \"conversation_log.txt\"","    with open(log_file_path, \"w\", encoding=\"utf-8\") as log_file:","        for message in st.session_state.messages:","            role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","            log_fileimport os","import streamlit as st","from dotenv import load_dotenv","from datetime import datetime  # 日付・時刻の取得に使用","from pdf_loader import load_pdf","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# 読み込みたいPDFファイルが入っているフォルダのパス","folder_path = \"./kougisiryou\"  # ファイルが保存されているフォルダのパス","","# FAISSインデックスの作成","faiss_index = load_and_index_folder(folder_path)","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    # ユーザーメッセージをセッションに追加し表示","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    # FAISSインデックスを使って回答を生成し表示","    response = search_index(faiss_index, query)","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    # 応答メッセージをセッションに保存","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","# 履歴を出力する処理","def save_conversation_log():","    # 動的なファイル名を生成（例: conversation_log_20241203_141530.txt）","    timestamp = datetime.now().strftime(\"%Y%m%d_%H%M%S\")","    log_file_path = f\"conversation_log_{timestamp}.txt\"","    with open(log_file_path, \"w\", encoding=\"utf-8\") as log_file:","        for message in st.session_state.messages:","            role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","            log_file.write(f\"{role}: {message['content']}\\n\")","    st.success(f\"会話履歴が {log_file_path} に保存されました！\")","","# 会話終了ボタン","if st.button(\"会話を終了\"):","    save_conversation_log()","    st.info(\"会話が終了しました。アプリを閉じるか再起動してください。\")",".write(f\"{role}: {message['content']}\\n\")","    ","","# 会話終了ボタン","if st.button(\"会話を終了\"):","    save_conversation_log()","    st.info(\"会話が終了しました。\")",""],"id":205},{"start":{"row":0,"column":0},"end":{"row":62,"column":0},"action":"insert","lines":["import os","import streamlit as st","from dotenv import load_dotenv","from datetime import datetime  # 日付・時刻の取得に使用","from pdf_loader import load_pdf","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# 読み込みたいPDFファイルが入っているフォルダのパス","folder_path = \"./kougisiryou\"  # ファイルが保存されているフォルダのパス","","# FAISSインデックスの作成","faiss_index = load_and_index_folder(folder_path)","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    # ユーザーメッセージをセッションに追加し表示","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    # FAISSインデックスを使って回答を生成し表示","    response = search_index(faiss_index, query)","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    # 応答メッセージをセッションに保存","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","# 履歴を出力する処理","def save_conversation_log():","    # 動的なファイル名を生成（例: conversation_log_20241203_141530.txt）","    timestamp = datetime.now().strftime(\"%Y%m%d_%H%M%S\")","    log_file_path = f\"conversation_log_{timestamp}.txt\"","    with open(log_file_path, \"w\", encoding=\"utf-8\") as log_file:","        for message in st.session_state.messages:","            role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","            log_file.write(f\"{role}: {message['content']}\\n\")","    st.success(f\"会話履歴が {log_file_path} に保存されました！\")","","# 会話終了ボタン","if st.button(\"会話を終了\"):","    save_conversation_log()","    st.info(\"会話が終了しました。アプリを閉じるか再起動してください。\")",""]}],[{"start":{"row":3,"column":31},"end":{"row":3,"column":44},"action":"remove","lines":["# 日付・時刻の取得に使用"],"id":206}],[{"start":{"row":61,"column":40},"end":{"row":61,"column":41},"action":"remove","lines":["。"],"id":207},{"start":{"row":61,"column":39},"end":{"row":61,"column":40},"action":"remove","lines":["い"]},{"start":{"row":61,"column":38},"end":{"row":61,"column":39},"action":"remove","lines":["さ"]},{"start":{"row":61,"column":37},"end":{"row":61,"column":38},"action":"remove","lines":["だ"]},{"start":{"row":61,"column":36},"end":{"row":61,"column":37},"action":"remove","lines":["く"]},{"start":{"row":61,"column":35},"end":{"row":61,"column":36},"action":"remove","lines":["て"]},{"start":{"row":61,"column":34},"end":{"row":61,"column":35},"action":"remove","lines":["し"]},{"start":{"row":61,"column":33},"end":{"row":61,"column":34},"action":"remove","lines":["動"]},{"start":{"row":61,"column":32},"end":{"row":61,"column":33},"action":"remove","lines":["起"]},{"start":{"row":61,"column":31},"end":{"row":61,"column":32},"action":"remove","lines":["再"]},{"start":{"row":61,"column":30},"end":{"row":61,"column":31},"action":"remove","lines":["か"]},{"start":{"row":61,"column":29},"end":{"row":61,"column":30},"action":"remove","lines":["る"]},{"start":{"row":61,"column":28},"end":{"row":61,"column":29},"action":"remove","lines":["じ"]},{"start":{"row":61,"column":27},"end":{"row":61,"column":28},"action":"remove","lines":["閉"]},{"start":{"row":61,"column":26},"end":{"row":61,"column":27},"action":"remove","lines":["を"]},{"start":{"row":61,"column":25},"end":{"row":61,"column":26},"action":"remove","lines":["リ"]},{"start":{"row":61,"column":24},"end":{"row":61,"column":25},"action":"remove","lines":["プ"]},{"start":{"row":61,"column":23},"end":{"row":61,"column":24},"action":"remove","lines":["ア"]}],[{"start":{"row":15,"column":17},"end":{"row":15,"column":28},"action":"remove","lines":["kougisiryou"],"id":208},{"start":{"row":15,"column":17},"end":{"row":15,"column":28},"action":"insert","lines":["kougisiryou"]},{"start":{"row":15,"column":17},"end":{"row":15,"column":28},"action":"remove","lines":["kougisiryou"]},{"start":{"row":15,"column":17},"end":{"row":15,"column":18},"action":"insert","lines":["ｓ"]},{"start":{"row":15,"column":17},"end":{"row":15,"column":18},"action":"remove","lines":["ｓ"]},{"start":{"row":15,"column":17},"end":{"row":15,"column":18},"action":"insert","lines":["そ"]},{"start":{"row":15,"column":17},"end":{"row":15,"column":18},"action":"remove","lines":["そ"]},{"start":{"row":15,"column":17},"end":{"row":15,"column":19},"action":"insert","lines":["そｆ"]},{"start":{"row":15,"column":17},"end":{"row":15,"column":19},"action":"remove","lines":["そｆ"]},{"start":{"row":15,"column":17},"end":{"row":15,"column":18},"action":"insert","lines":["そ"]}],[{"start":{"row":15,"column":17},"end":{"row":15,"column":18},"action":"remove","lines":["そ"],"id":209}],[{"start":{"row":15,"column":17},"end":{"row":15,"column":18},"action":"insert","lines":["s"],"id":210},{"start":{"row":15,"column":18},"end":{"row":15,"column":19},"action":"insert","lines":["o"]},{"start":{"row":15,"column":19},"end":{"row":15,"column":20},"action":"insert","lines":["f"]},{"start":{"row":15,"column":20},"end":{"row":15,"column":21},"action":"insert","lines":["t"]},{"start":{"row":15,"column":21},"end":{"row":15,"column":22},"action":"insert","lines":["w"]}],[{"start":{"row":15,"column":22},"end":{"row":15,"column":23},"action":"insert","lines":["a"],"id":211},{"start":{"row":15,"column":23},"end":{"row":15,"column":24},"action":"insert","lines":["r"]},{"start":{"row":15,"column":24},"end":{"row":15,"column":25},"action":"insert","lines":["e"]}],[{"start":{"row":56,"column":0},"end":{"row":56,"column":50},"action":"remove","lines":["    st.success(f\"会話履歴が {log_file_path} に保存されました！\")"],"id":212},{"start":{"row":55,"column":61},"end":{"row":56,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":4,"column":7},"end":{"row":4,"column":8},"action":"remove","lines":["f"],"id":213},{"start":{"row":4,"column":6},"end":{"row":4,"column":7},"action":"remove","lines":["d"]},{"start":{"row":4,"column":5},"end":{"row":4,"column":6},"action":"remove","lines":["p"]}],[{"start":{"row":4,"column":5},"end":{"row":4,"column":6},"action":"remove","lines":["_"],"id":214}],[{"start":{"row":4,"column":5},"end":{"row":4,"column":6},"action":"insert","lines":["f"],"id":215},{"start":{"row":4,"column":6},"end":{"row":4,"column":7},"action":"insert","lines":["i"]},{"start":{"row":4,"column":7},"end":{"row":4,"column":8},"action":"insert","lines":["l"]},{"start":{"row":4,"column":8},"end":{"row":4,"column":9},"action":"insert","lines":["e"]},{"start":{"row":4,"column":9},"end":{"row":4,"column":10},"action":"insert","lines":["_"]}],[{"start":{"row":4,"column":32},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":216}],[{"start":{"row":5,"column":0},"end":{"row":5,"column":32},"action":"insert","lines":["from file_loader import load_pdf"],"id":217}],[{"start":{"row":5,"column":31},"end":{"row":5,"column":32},"action":"remove","lines":["f"],"id":218},{"start":{"row":5,"column":30},"end":{"row":5,"column":31},"action":"remove","lines":["d"]},{"start":{"row":5,"column":29},"end":{"row":5,"column":30},"action":"remove","lines":["p"]}],[{"start":{"row":5,"column":29},"end":{"row":5,"column":30},"action":"insert","lines":["t"],"id":219},{"start":{"row":5,"column":30},"end":{"row":5,"column":31},"action":"insert","lines":["e"]},{"start":{"row":5,"column":31},"end":{"row":5,"column":32},"action":"insert","lines":["x"]},{"start":{"row":5,"column":32},"end":{"row":5,"column":33},"action":"insert","lines":["t"]}],[{"start":{"row":5,"column":33},"end":{"row":6,"column":0},"action":"insert","lines":["",""],"id":220}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":32},"action":"insert","lines":["from file_loader import load_pdf"],"id":221}],[{"start":{"row":6,"column":31},"end":{"row":6,"column":32},"action":"remove","lines":["f"],"id":222},{"start":{"row":6,"column":30},"end":{"row":6,"column":31},"action":"remove","lines":["d"]},{"start":{"row":6,"column":29},"end":{"row":6,"column":30},"action":"remove","lines":["p"]}],[{"start":{"row":6,"column":29},"end":{"row":6,"column":30},"action":"insert","lines":["d"],"id":223},{"start":{"row":6,"column":30},"end":{"row":6,"column":31},"action":"insert","lines":["o"]},{"start":{"row":6,"column":31},"end":{"row":6,"column":32},"action":"insert","lines":["c"]},{"start":{"row":6,"column":32},"end":{"row":6,"column":33},"action":"insert","lines":["x"]}],[{"start":{"row":16,"column":0},"end":{"row":47,"column":80},"action":"remove","lines":["# 読み込みたいPDFファイルが入っているフォルダのパス","folder_path = \"./software\"  # ファイルが保存されているフォルダのパス","","# FAISSインデックスの作成","faiss_index = load_and_index_folder(folder_path)","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    # ユーザーメッセージをセッションに追加し表示","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    # FAISSインデックスを使って回答を生成し表示","    response = search_index(faiss_index, query)","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    # 応答メッセージをセッションに保存","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})"],"id":224},{"start":{"row":16,"column":0},"end":{"row":58,"column":80},"action":"insert","lines":["# フォルダのパス","lecture_folder = \"./kougisiryou\"  # 講義資料フォルダ","example_folder = \"./examples\"    # 参考例フォルダ","","# インデックスの作成","def load_and_index_multiple_folders(folders):","    \"\"\"複数のフォルダをまとめてインデックス化\"\"\"","    all_texts = []","    for folder in folders:","        texts = load_and_index_folder(folder, return_documents=True)","        all_texts.extend(texts)","    return create_faiss_index(all_texts)","","# 講義資料と参考例を統合したインデックスを作成","combined_index = load_and_index_multiple_folders([lecture_folder, example_folder])","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    # ユーザーメッセージをセッションに追加し表示","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    # 統合インデックスで回答を生成","    response = search_index(combined_index, query)","","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    # 応答メッセージをセッションに保存","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})"]}],[{"start":{"row":8,"column":61},"end":{"row":8,"column":62},"action":"insert","lines":[","],"id":225}],[{"start":{"row":8,"column":62},"end":{"row":8,"column":80},"action":"insert","lines":["create_faiss_index"],"id":226}],[{"start":{"row":8,"column":62},"end":{"row":8,"column":63},"action":"insert","lines":[" "],"id":227}],[{"start":{"row":0,"column":0},"end":{"row":74,"column":0},"action":"remove","lines":["import os","import streamlit as st","from dotenv import load_dotenv","from datetime import datetime  ","from file_loader import load_pdf","from file_loader import load_text","from file_loader import load_docx","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index, create_faiss_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# フォルダのパス","lecture_folder = \"./kougisiryou\"  # 講義資料フォルダ","example_folder = \"./examples\"    # 参考例フォルダ","","# インデックスの作成","def load_and_index_multiple_folders(folders):","    \"\"\"複数のフォルダをまとめてインデックス化\"\"\"","    all_texts = []","    for folder in folders:","        texts = load_and_index_folder(folder, return_documents=True)","        all_texts.extend(texts)","    return create_faiss_index(all_texts)","","# 講義資料と参考例を統合したインデックスを作成","combined_index = load_and_index_multiple_folders([lecture_folder, example_folder])","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    # ユーザーメッセージをセッションに追加し表示","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    # 統合インデックスで回答を生成","    response = search_index(combined_index, query)","","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    # 応答メッセージをセッションに保存","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","# 履歴を出力する処理","def save_conversation_log():","    # 動的なファイル名を生成（例: conversation_log_20241203_141530.txt）","    timestamp = datetime.now().strftime(\"%Y%m%d_%H%M%S\")","    log_file_path = f\"conversation_log_{timestamp}.txt\"","    with open(log_file_path, \"w\", encoding=\"utf-8\") as log_file:","        for message in st.session_state.messages:","            role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","            log_file.write(f\"{role}: {message['content']}\\n\")","","# 会話終了ボタン","if st.button(\"会話を終了\"):","    save_conversation_log()","    st.info(\"会話が終了しました。\")",""],"id":228},{"start":{"row":0,"column":0},"end":{"row":91,"column":0},"action":"insert","lines":["import os","import gspread","import streamlit as st","from dotenv import load_dotenv","from datetime import datetime  ","from oauth2client.service_account import ServiceAccountCredentials","from file_loader import load_pdf","from file_loader import load_text","from file_loader import load_docx","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index, create_faiss_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# フォルダのパス","lecture_folder = \"./Network_Engineering\"  # 講義資料フォルダ","example_folder = \"./Network_Engineering_examples\"  # 回答例フォルダ","log_folder = \"./logs\"          # 会話ログ保存フォルダ","","# インデックスの作成","def load_and_index_multiple_folders(folders):","    all_texts = []","    for folder in folders:","        texts = load_and_index_folder(folder, return_documents=True)","        all_texts.extend(texts)","    return create_faiss_index(all_texts)","","# 講義資料と参考例を統合したインデックスを作成","combined_index = load_and_index_multiple_folders([lecture_folder, example_folder])","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    # ユーザーメッセージをセッションに追加し表示","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    # 統合インデックスで回答を生成","    response = search_index(combined_index, query)","","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    # 応答メッセージをセッションに保存","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","# 履歴を出力する処理","# Google Sheets に接続","def get_gsheet():","    import json","    scope = [\"https://spreadsheets.google.com/feeds\", \"https://www.googleapis.com/auth/drive\"]","    creds_dict = json.loads(st.secrets[\"GSPREAD_SERVICE_ACCOUNT\"])","    creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)","    client = gspread.authorize(creds)","    sheet = client.open(st.secrets[\"SHEET_NAME\"]).sheet1","    return sheet","","# 会話履歴を1行ずつGoogle Sheetsに保存","def save_conversation_log_to_sheet(student_id=\"anonymous\"):","    sheet = get_gsheet()","    timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")","    for message in st.session_state.messages:","        role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","        sheet.append_row([timestamp, student_id, role, message[\"content\"]])","","# 学籍番号を最初に入力させる","if \"student_id\" not in st.session_state:","    st.session_state.student_id = st.text_input(\"あなたの学籍番号を入力してください（8桁）\")","    st.stop()","","# 会話終了ボタン押されたらGoogle Sheetsに保存","if st.button(\"会話を終了\"):","    save_conversation_log_to_sheet(student_id=st.session_state.student_id)","    st.info(f\"会話が終了しました\")","",""]}],[{"start":{"row":19,"column":20},"end":{"row":19,"column":39},"action":"remove","lines":["Network_Engineering"],"id":229}],[{"start":{"row":19,"column":20},"end":{"row":19,"column":21},"action":"insert","lines":["k"],"id":230},{"start":{"row":19,"column":21},"end":{"row":19,"column":22},"action":"insert","lines":["o"]},{"start":{"row":19,"column":22},"end":{"row":19,"column":23},"action":"insert","lines":["u"]},{"start":{"row":19,"column":23},"end":{"row":19,"column":24},"action":"insert","lines":["g"]},{"start":{"row":19,"column":24},"end":{"row":19,"column":25},"action":"insert","lines":["i"]},{"start":{"row":19,"column":25},"end":{"row":19,"column":26},"action":"insert","lines":["s"]},{"start":{"row":19,"column":26},"end":{"row":19,"column":27},"action":"insert","lines":["i"]},{"start":{"row":19,"column":27},"end":{"row":19,"column":28},"action":"insert","lines":["r"]},{"start":{"row":19,"column":28},"end":{"row":19,"column":29},"action":"insert","lines":["y"]},{"start":{"row":19,"column":29},"end":{"row":19,"column":30},"action":"insert","lines":["o"]},{"start":{"row":19,"column":30},"end":{"row":19,"column":31},"action":"insert","lines":["u"]}],[{"start":{"row":20,"column":20},"end":{"row":20,"column":40},"action":"remove","lines":["Network_Engineering_"],"id":231}],[{"start":{"row":0,"column":0},"end":{"row":91,"column":0},"action":"remove","lines":["import os","import gspread","import streamlit as st","from dotenv import load_dotenv","from datetime import datetime  ","from oauth2client.service_account import ServiceAccountCredentials","from file_loader import load_pdf","from file_loader import load_text","from file_loader import load_docx","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index, create_faiss_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# フォルダのパス","lecture_folder = \"./kougisiryou\"  # 講義資料フォルダ","example_folder = \"./examples\"  # 回答例フォルダ","log_folder = \"./logs\"          # 会話ログ保存フォルダ","","# インデックスの作成","def load_and_index_multiple_folders(folders):","    all_texts = []","    for folder in folders:","        texts = load_and_index_folder(folder, return_documents=True)","        all_texts.extend(texts)","    return create_faiss_index(all_texts)","","# 講義資料と参考例を統合したインデックスを作成","combined_index = load_and_index_multiple_folders([lecture_folder, example_folder])","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    # ユーザーメッセージをセッションに追加し表示","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    # 統合インデックスで回答を生成","    response = search_index(combined_index, query)","","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    # 応答メッセージをセッションに保存","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","# 履歴を出力する処理","# Google Sheets に接続","def get_gsheet():","    import json","    scope = [\"https://spreadsheets.google.com/feeds\", \"https://www.googleapis.com/auth/drive\"]","    creds_dict = json.loads(st.secrets[\"GSPREAD_SERVICE_ACCOUNT\"])","    creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)","    client = gspread.authorize(creds)","    sheet = client.open(st.secrets[\"SHEET_NAME\"]).sheet1","    return sheet","","# 会話履歴を1行ずつGoogle Sheetsに保存","def save_conversation_log_to_sheet(student_id=\"anonymous\"):","    sheet = get_gsheet()","    timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")","    for message in st.session_state.messages:","        role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","        sheet.append_row([timestamp, student_id, role, message[\"content\"]])","","# 学籍番号を最初に入力させる","if \"student_id\" not in st.session_state:","    st.session_state.student_id = st.text_input(\"あなたの学籍番号を入力してください（8桁）\")","    st.stop()","","# 会話終了ボタン押されたらGoogle Sheetsに保存","if st.button(\"会話を終了\"):","    save_conversation_log_to_sheet(student_id=st.session_state.student_id)","    st.info(f\"会話が終了しました\")","",""],"id":232},{"start":{"row":0,"column":0},"end":{"row":81,"column":0},"action":"insert","lines":["import os","import gspread","import streamlit as st","from dotenv import load_dotenv","from datetime import datetime  ","from oauth2client.service_account import ServiceAccountCredentials","from file_loader import load_pdf","from file_loader import load_text","from file_loader import load_docx","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index, create_faiss_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# フォルダのパス","lecture_folder = \"./kougisiryou\"  # 講義資料フォルダ","example_folder = \"./examples\"     # 回答例フォルダ","log_folder = \"./logs\"             # 会話ログ保存フォルダ","","# インデックスの作成","def load_and_index_multiple_folders(folders):","    all_texts = []","    for folder in folders:","        texts = load_and_index_folder(folder, return_documents=True)","        all_texts.extend(texts)","    return create_faiss_index(all_texts)","","# 講義資料と参考例を統合したインデックスを作成","combined_index = load_and_index_multiple_folders([lecture_folder, example_folder])","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    response = search_index(combined_index, query)","","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","# Google Sheets に接続","def get_gsheet():","    import json","    scope = [\"https://spreadsheets.google.com/feeds\", \"https://www.googleapis.com/auth/drive\"]","    creds_dict = json.loads(st.secrets[\"GSPREAD_SERVICE_ACCOUNT\"])","    creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)","    client = gspread.authorize(creds)","    sheet = client.open(st.secrets[\"SHEET_NAME\"]).sheet1","    return sheet","","# 会話履歴を1行ずつGoogle Sheetsに保存（student_idは常にanonymous）","def save_conversation_log_to_sheet():","    sheet = get_gsheet()","    timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")","    for message in st.session_state.messages:","        role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","        sheet.append_row([timestamp, \"anonymous\", role, message[\"content\"]])","","# 会話終了ボタン押されたらGoogle Sheetsに保存","if st.button(\"会話を終了\"):","    save_conversation_log_to_sheet()","    st.info(\"会話が終了しました\")",""]}],[{"start":{"row":70,"column":0},"end":{"row":75,"column":76},"action":"remove","lines":["def save_conversation_log_to_sheet():","    sheet = get_gsheet()","    timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")","    for message in st.session_state.messages:","        role = \"ユーザー\" if message[\"role\"] == \"user\" else \"アシスタント\"","        sheet.append_row([timestamp, \"anonymous\", role, message[\"content\"]])"],"id":233},{"start":{"row":70,"column":0},"end":{"row":79,"column":0},"action":"insert","lines":["def save_conversation_log_to_sheet():","    sheet = get_gsheet()","    # ユーザーとアシスタントのペアを順番に取り出して記録","    for i in range(0, len(st.session_state.messages) - 1, 2):","        user_msg = st.session_state.messages[i]","        bot_msg = st.session_state.messages[i + 1]","        if user_msg[\"role\"] == \"user\" and bot_msg[\"role\"] == \"assistant\":","            timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")","            sheet.append_row([timestamp, user_msg[\"content\"], bot_msg[\"content\"]])",""]}],[{"start":{"row":0,"column":0},"end":{"row":85,"column":0},"action":"remove","lines":["import os","import gspread","import streamlit as st","from dotenv import load_dotenv","from datetime import datetime  ","from oauth2client.service_account import ServiceAccountCredentials","from file_loader import load_pdf","from file_loader import load_text","from file_loader import load_docx","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index, create_faiss_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# フォルダのパス","lecture_folder = \"./kougisiryou\"  # 講義資料フォルダ","example_folder = \"./examples\"     # 回答例フォルダ","log_folder = \"./logs\"             # 会話ログ保存フォルダ","","# インデックスの作成","def load_and_index_multiple_folders(folders):","    all_texts = []","    for folder in folders:","        texts = load_and_index_folder(folder, return_documents=True)","        all_texts.extend(texts)","    return create_faiss_index(all_texts)","","# 講義資料と参考例を統合したインデックスを作成","combined_index = load_and_index_multiple_folders([lecture_folder, example_folder])","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    response = search_index(combined_index, query)","","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","# Google Sheets に接続","def get_gsheet():","    import json","    scope = [\"https://spreadsheets.google.com/feeds\", \"https://www.googleapis.com/auth/drive\"]","    creds_dict = json.loads(st.secrets[\"GSPREAD_SERVICE_ACCOUNT\"])","    creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)","    client = gspread.authorize(creds)","    sheet = client.open(st.secrets[\"SHEET_NAME\"]).sheet1","    return sheet","","# 会話履歴を1行ずつGoogle Sheetsに保存（student_idは常にanonymous）","def save_conversation_log_to_sheet():","    sheet = get_gsheet()","    # ユーザーとアシスタントのペアを順番に取り出して記録","    for i in range(0, len(st.session_state.messages) - 1, 2):","        user_msg = st.session_state.messages[i]","        bot_msg = st.session_state.messages[i + 1]","        if user_msg[\"role\"] == \"user\" and bot_msg[\"role\"] == \"assistant\":","            timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")","            sheet.append_row([timestamp, user_msg[\"content\"], bot_msg[\"content\"]])","","","# 会話終了ボタン押されたらGoogle Sheetsに保存","if st.button(\"会話を終了\"):","    save_conversation_log_to_sheet()","    st.info(\"会話が終了しました\")",""],"id":234},{"start":{"row":0,"column":0},"end":{"row":84,"column":24},"action":"insert","lines":["import os","import gspread","import streamlit as st","from dotenv import load_dotenv","from datetime import datetime  ","from oauth2client.service_account import ServiceAccountCredentials","from file_loader import load_pdf","from file_loader import load_text","from file_loader import load_docx","from text_splitter import split_text","from faiss_indexer import load_and_index_folder, search_index, create_faiss_index","","# 環境変数のロード（必要に応じて）","load_dotenv()","","# Streamlitのヘッダー","st.title(\"質問応答チャットボット\")","","# フォルダのパス","lecture_folder = \"./Programming_engineering\"  # 講義資料フォルダ","example_folder = \"./Programming engineering_examples\"     # 回答例フォルダ","log_folder = \"./logs\"             # 会話ログ保存フォルダ","","# インデックスの作成","def load_and_index_multiple_folders(folders):","    all_texts = []","    for folder in folders:","        texts = load_and_index_folder(folder, return_documents=True)","        all_texts.extend(texts)","    return create_faiss_index(all_texts)","","# 講義資料と参考例を統合したインデックスを作成","combined_index = load_and_index_multiple_folders([lecture_folder, example_folder])","","# セッションステートでメッセージの履歴を保持","if \"messages\" not in st.session_state:","    st.session_state.messages = []","","# 既存のメッセージをブラウザ上に表示","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","# ユーザー入力","query = st.chat_input(\"質問を入力してください:\")","","# 質問が入力された場合の応答処理","if query:","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    response = search_index(combined_index, query)","","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","# Google Sheets に接続","def get_gsheet():","    import json","    scope = [\"https://spreadsheets.google.com/feeds\", \"https://www.googleapis.com/auth/drive\"]","    creds_dict = json.loads(st.secrets[\"GSPREAD_SERVICE_ACCOUNT\"])","    creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)","    client = gspread.authorize(creds)","    sheet = client.open(st.secrets[\"SHEET_NAME\"]).sheet1","    return sheet","","# 会話履歴を1行ずつGoogle Sheetsに保存（student_idは常にanonymous）","def save_conversation_log_to_sheet():","    sheet = get_gsheet()","    # ユーザーとアシスタントのペアを順番に取り出して記録","    for i in range(0, len(st.session_state.messages) - 1, 2):","        user_msg = st.session_state.messages[i]","        bot_msg = st.session_state.messages[i + 1]","        if user_msg[\"role\"] == \"user\" and bot_msg[\"role\"] == \"assistant\":","            timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")","            sheet.append_row([timestamp, user_msg[\"content\"], bot_msg[\"content\"]])","","","# 会話終了ボタン押されたらGoogle Sheetsに保存","if st.button(\"会話を終了\"):","    save_conversation_log_to_sheet()","    st.info(\"会話が終了しました\")"]}],[{"start":{"row":19,"column":0},"end":{"row":20,"column":0},"action":"insert","lines":["<<<<<<< HEAD",""],"id":235,"ignore":true},{"start":{"row":22,"column":0},"end":{"row":26,"column":0},"action":"insert","lines":["=======","lecture_folder = \"./kougisiryou\"  # 講義資料フォルダ","example_folder = \"./examples\"     # 回答例フォルダ",">>>>>>> 396bd591 (Add education_chatbot)",""]},{"start":{"row":89,"column":24},"end":{"row":94,"column":0},"action":"insert","lines":["","<<<<<<< HEAD","","=======",">>>>>>> 396bd591 (Add education_chatbot)",""]}],[{"start":{"row":19,"column":0},"end":{"row":26,"column":46},"action":"remove","lines":["<<<<<<< HEAD","lecture_folder = \"./Programming_engineering\"  # 講義資料フォルダ","example_folder = \"./Programming engineering_examples\"     # 回答例フォルダ","=======","lecture_folder = \"./kougisiryou\"  # 講義資料フォルダ","example_folder = \"./examples\"     # 回答例フォルダ",">>>>>>> 396bd591 (Add education_chatbot)","log_folder = \"./logs\"             # 会話ログ保存フォルダ"],"id":236},{"start":{"row":19,"column":0},"end":{"row":21,"column":46},"action":"insert","lines":["lecture_folder = \"./Programming_engineering\"  # 講義資料フォルダ","example_folder = \"./Programming engineering_examples\"     # 回答例フォルダ","log_folder = \"./logs\"             # 会話ログ保存フォルダ"]}],[{"start":{"row":84,"column":24},"end":{"row":89,"column":0},"action":"remove","lines":["","<<<<<<< HEAD","","=======",">>>>>>> 396bd591 (Add education_chatbot)",""],"id":237}],[{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["",""],"id":239}],[{"start":{"row":23,"column":0},"end":{"row":30,"column":0},"action":"insert","lines":["# フォルダの存在確認","folders_to_load = [lecture_folder]","if os.path.exists(example_folder):","    folders_to_load.append(example_folder)","","# フォルダをまとめて読み込み＆インデックス化","combined_index = load_and_index_multiple_folders(folders_to_load)",""],"id":240}],[{"start":{"row":39,"column":0},"end":{"row":40,"column":82},"action":"remove","lines":["# 講義資料と参考例を統合したインデックスを作成","combined_index = load_and_index_multiple_folders([lecture_folder, example_folder])"],"id":250}],[{"start":{"row":28,"column":0},"end":{"row":29,"column":65},"action":"remove","lines":["# フォルダをまとめて読み込み＆インデックス化","combined_index = load_and_index_multiple_folders(folders_to_load)"],"id":251}],[{"start":{"row":27,"column":0},"end":{"row":28,"column":0},"action":"remove","lines":["",""],"id":252}],[{"start":{"row":35,"column":40},"end":{"row":36,"column":0},"action":"insert","lines":["",""],"id":253},{"start":{"row":36,"column":0},"end":{"row":36,"column":4},"action":"insert","lines":["    "]},{"start":{"row":36,"column":4},"end":{"row":37,"column":0},"action":"insert","lines":["",""]},{"start":{"row":37,"column":0},"end":{"row":37,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":37,"column":0},"end":{"row":37,"column":4},"action":"remove","lines":["    "],"id":254}],[{"start":{"row":37,"column":0},"end":{"row":38,"column":65},"action":"insert","lines":["# フォルダをまとめて読み込み＆インデックス化","combined_index = load_and_index_multiple_folders(folders_to_load)"],"id":255}],[{"start":{"row":39,"column":0},"end":{"row":40,"column":0},"action":"remove","lines":["",""],"id":256}],[{"start":{"row":39,"column":0},"end":{"row":40,"column":0},"action":"remove","lines":["",""],"id":257}],[{"start":{"row":27,"column":0},"end":{"row":28,"column":0},"action":"remove","lines":["",""],"id":258}],[{"start":{"row":20,"column":20},"end":{"row":20,"column":44},"action":"remove","lines":["Programming engineering_"],"id":259}],[{"start":{"row":73,"column":0},"end":{"row":83,"column":82},"action":"remove","lines":["","# 会話履歴を1行ずつGoogle Sheetsに保存（student_idは常にanonymous）","def save_conversation_log_to_sheet():","    sheet = get_gsheet()","    # ユーザーとアシスタントのペアを順番に取り出して記録","    for i in range(0, len(st.session_state.messages) - 1, 2):","        user_msg = st.session_state.messages[i]","        bot_msg = st.session_state.messages[i + 1]","        if user_msg[\"role\"] == \"user\" and bot_msg[\"role\"] == \"assistant\":","            timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")","            sheet.append_row([timestamp, user_msg[\"content\"], bot_msg[\"content\"]])"],"id":261},{"start":{"row":73,"column":0},"end":{"row":78,"column":0},"action":"insert","lines":["# 会話履歴を1行だけGoogle Sheetsに保存（student_idは常にanonymous）","def save_single_turn_to_sheet(user_query, assistant_response):","    sheet = get_gsheet()","    timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")","    sheet.append_row([timestamp, user_query, assistant_response])",""]}],[{"start":{"row":72,"column":16},"end":{"row":73,"column":0},"action":"insert","lines":["",""],"id":262},{"start":{"row":73,"column":0},"end":{"row":73,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":51,"column":0},"end":{"row":63,"column":0},"action":"remove","lines":["# 質問が入力された場合の応答処理","if query:","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    response = search_index(combined_index, query)","","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})",""],"id":264},{"start":{"row":51,"column":0},"end":{"row":66,"column":0},"action":"insert","lines":["# 質問が入力された場合の応答処理","if query:","    st.session_state.messages.append({\"role\": \"user\", \"content\": query})","    with st.chat_message(\"user\"):","        st.markdown(query)","","    response = search_index(combined_index, query)","","    with st.chat_message(\"assistant\"):","        st.markdown(response)","","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": response})","","    # ✅ ここでログを即時保存","    save_single_turn_to_sheet(query, response)",""]}],[{"start":{"row":64,"column":8},"end":{"row":64,"column":9},"action":"remove","lines":["こ"],"id":265},{"start":{"row":64,"column":7},"end":{"row":64,"column":8},"action":"remove","lines":[" "]},{"start":{"row":64,"column":6},"end":{"row":64,"column":7},"action":"remove","lines":["✅"]}],[{"start":{"row":64,"column":6},"end":{"row":64,"column":7},"action":"insert","lines":["こ"],"id":266}],[{"start":{"row":84,"column":0},"end":{"row":88,"column":24},"action":"remove","lines":["","# 会話終了ボタン押されたらGoogle Sheetsに保存","if st.button(\"会話を終了\"):","    save_conversation_log_to_sheet()","    st.info(\"会話が終了しました\")"],"id":267},{"start":{"row":83,"column":0},"end":{"row":84,"column":0},"action":"remove","lines":["",""]},{"start":{"row":82,"column":0},"end":{"row":83,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":791.5,"scrollleft":0,"selection":{"start":{"row":82,"column":0},"end":{"row":82,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":5,"state":"start","mode":"ace/mode/python"}},"timestamp":1744164144455}